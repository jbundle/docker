version: '3.7'
services:

  wordpress:
    image: wordpress:${WORDPRESS_TAG:-4.8.1}
    hostname: wordpress
#    ports:
#      - 8101:80
    depends_on:
    - db
    networks:
    - proxy
    - db
    - test
    volumes:
    - wordpress-data:/var/www/html
    deploy:
      labels:
      - com.df.notify=true
      - com.df.distribute=true
      - com.df.port=80
      - com.df.xForwardedProto=true
      - com.df.httpsOnly=true
      - com.df.serviceDomain=${WORDPRESS_SUB_DOMAIN:-wordpress}.${DOMAIN_NAME:-docker.usc.edu}
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
    - WORDPRESS_DB_PASSWORD=passw0rd
    - WORDPRESS_DB_HOST=db
    - ServerName=wordpress.docker.usc.edu

  db:
    image: mysql:${WORDPRESS_MYSQL_TAG:-5.7}
    hostname: db
    environment:
      MYSQL_ROOT_PASSWORD: passw0rd
    networks:
    - db
    volumes:
    - wordpress-db:/var/lib/mysql
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  proxy:
    external: true
  test:
    external: true
  db:
    driver: overlay

volumes:
  wordpress-db:
    external: true
  wordpress-data:
    external: true
#    external:
#      name: db-data
#      source: {{.Service.Name}}-{{.Task.Slot}}-vol
#    target: /mydata
#    driver_opts:
#      size: 25
#      backing: relocatable
#      ebstype: gp2
# volume-opt=size=10
#
# --mount type=volume,volume-driver=cloudstor:aws,source=sharedvol1,destination=/shareddata
#
# docker service create \
#  --replicas 5 \
#  --name ping3 \
#  --mount type=volume,volume-driver=cloudstor:aws,source={{.Service.Name}}-{{.Task.Slot}}-vol,destination=/mydata,volume-opt=backing=relocatable,volume-opt=size=25,volume-opt=ebstype=gp2 \
#  alpine ping docker.com
#
# volumes:
#  - type: volume
#    source: source={{.Service.Name}}-{{.Task.Slot}}-vol
#    target: /var/lib/mysql
#    volume:
